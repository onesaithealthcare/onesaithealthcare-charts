{
  "id": "oh-base",
  "realm": "oh-base",
  "notBefore": 1669830146,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 31536000,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 7200,
  "ssoSessionMaxLifespan": 31536000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 600,
  "accessCodeLifespanUserAction": 600,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 600,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "name": "HNCIT_CIT_RESCHEDULE",
        "description": "HNCIT_CIT_RESCHEDULE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HDR_BASE_R",
        "description": "HDR_BASE_R",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_CIT_NEW",
        "description": "HNCIT_CIT_NEW",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_GEST_PARAM",
        "description": "HNCON_GEST_PARAM",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "OHALE_WR",
        "description": "Permiso de escritura sobre recursos de OHALE.",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOR_CLINICAL_FORMS_WIDGET",
        "description": "HNPOR_CLINICAL_FORMS_WIDGET",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOR_APPO_WIDGET",
        "description": "HNPOR_APPO_WIDGET",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_WORKLIST_WRITE",
        "description": "HNCON_WORKLIST_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOB_POB_WRITE",
        "description": "HNPOB_POB_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_OFER_DEMA_PREST",
        "description": "HNAUT_OFER_DEMA_PREST",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_USR_READ_SYS",
        "description": "HNAUT_USR_READ_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOB_POB_READ",
        "description": "HNPOB_POB_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HDR_FOUNDATION_R",
        "description": "HDR_FOUNDATION_R",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_CIT_CANCEL",
        "description": "HNGEP_CIT_CANCEL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_WRITE_OWN_REQ_LAB",
        "description": "HNGEP_WRITE_OWN_REQ_LAB",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_ADM_READ",
        "description": "HNAUT_ADM_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_ADM_WRITE",
        "description": "HNAUT_ADM_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_WORKPLACE_READ",
        "description": "HNAUT_WORKPLACE_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_RESULTS_REQ_LAB",
        "description": "HNGEP_RESULTS_REQ_LAB",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_CONF_ROLE_PRF_WRITE",
        "description": "HNAUT_CONF_ROLE_PRF_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_EXE_IMA",
        "description": "HNGEP_EXE_IMA",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_USR_WRITE_SYS",
        "description": "HNAUT_USR_WRITE_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_PHYS_STRUCT_WRITE_SYS",
        "description": "HNAUT_PHYS_STRUCT_WRITE_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "IMPRIMIR_INF",
        "description": "IMPRIMIR_INF",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "OHALE_RD",
        "description": "Permiso de lectura sobre recursos de OHALE.",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_PRF_WRITE",
        "description": "HNAUT_PRF_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_WRITE_REQ_IMA_ADVANCED",
        "description": "HNGEP_WRITE_REQ_IMA_ADVANCED",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_CIT_NEW",
        "description": "HNGEP_CIT_NEW",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_ACTION_END_APPO",
        "description": "HNCIT_ACTION_END_APPO",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_RESULTS_REQ_IMA",
        "description": "HNGEP_RESULTS_REQ_IMA",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HDR_FOUNDATION_W",
        "description": "HDR_FOUNDATION_W",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_USR_WRITE_CENTER",
        "description": "HNAUT_USR_WRITE_CENTER",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCAT_CAT_WRITE",
        "description": "HNCAT_CAT_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_WRITE_OWN_REQ_IMA",
        "description": "HNGEP_WRITE_OWN_REQ_IMA",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_CLI",
        "description": "HNCON_CLI",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOR_APPO_NEW_PROF",
        "description": "HNPOR_APPO_NEW_PROF",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_DOMAIN_WRITE",
        "description": "HNCON_DOMAIN_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_APPOINT_CALL",
        "description": "HNCIT_APPOINT_CALL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_CIT_CANCEL",
        "description": "HNCIT_CIT_CANCEL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_PACS_ACCESS",
        "description": "HNGEP_PACS_ACCESS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_FUN_LABEL",
        "description": "HNAUT_FUN_LABEL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_PARAM_WRITE",
        "description": "HNCON_PARAM_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOR_REQ_WIDGET",
        "description": "HNPOR_REQ_WIDGET",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_FUN_STRUCT_READ_SYS",
        "description": "HNAUT_FUN_STRUCT_READ_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_SEE_MIN_DETAIL",
        "description": "HNGEP_SEE_MIN_DETAIL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_CONF_ROLE_PRF_READ",
        "description": "HNAUT_CONF_ROLE_PRF_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_READ_REQ",
        "description": "HNGEP_READ_REQ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HDR_BASE_W",
        "description": "HDR_BASE_W",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_HIST_CONNECTION_SYS",
        "description": "HNAUT_HIST_CONNECTION_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_ACTION_ADMISSION",
        "description": "HNCIT_ACTION_ADMISSION",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_WRITE_REQ_LAB",
        "description": "HNGEP_WRITE_REQ_LAB",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_FUN_ACTIVE_PASSIVE",
        "description": "HNAUT_FUN_ACTIVE_PASSIVE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_AUTORIZ_REQ",
        "description": "HNGEP_AUTORIZ_REQ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_WRITE_REQ_IMA",
        "description": "HNGEP_WRITE_REQ_IMA",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_WORKLIST_IMPEXP",
        "description": "HNCON_WORKLIST_IMPEXP",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_FUN_READ",
        "description": "HNAUT_FUN_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_FIN_REQ",
        "description": "HNGEP_FIN_REQ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_WORKPLACE_WRITE",
        "description": "HNAUT_WORKPLACE_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNGEP_EXT_SAM",
        "description": "HNGEP_EXT_SAM",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_CALENDAR_MNG_WRITE",
        "description": "HNAUT_CALENDAR_MNG_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_CIT_PATI_APPO",
        "description": "HNCIT_CIT_PATI_APPO",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCAT_TERMINOLOGY_WRITE",
        "description": "HNCAT_TERMINOLOGY_WRITE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_PRF_READ",
        "description": "HNAUT_PRF_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCIT_CIT_EDITION_APPO",
        "description": "HNCIT_CIT_EDITION_APPO",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOB_POB_READ_CONFIDENTIAL",
        "description": "HNPOB_POB_READ_CONFIDENTIAL",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_USR_WRITE_ORG",
        "description": "HNAUT_USR_WRITE_ORG",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "default-roles-openshift-dev",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_PHYS_STRUCT_READ_SYS",
        "description": "HNAUT_PHYS_STRUCT_READ_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCLI_FOLLOW_FORMS_READ",
        "description": "HNCLI_FOLLOW_FORMS_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNDOC_ATTACH_READ",
        "description": "HNDOC_ATTACH_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNPOR_APPO_NEW_SCHE",
        "description": "HNPOR_APPO_NEW_SCHE",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNAUT_FUN_STRUCT_WRITE_SYS",
        "description": "HNAUT_FUN_STRUCT_WRITE_SYS",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      },
      {
        "name": "HNCON_DOMAIN_READ",
        "description": "HNCON_DOMAIN_READ",
        "composite": false,
        "clientRole": false,
        "containerId": "oh-base",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "impersonation",
                "manage-events",
                "view-authorization",
                "view-identity-providers",
                "view-realm",
                "manage-identity-providers",
                "view-events",
                "query-clients",
                "query-users",
                "query-realms",
                "view-clients",
                "manage-users",
                "manage-authorization",
                "view-users",
                "manage-clients",
                "manage-realm",
                "create-client",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        },
        {
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab9a2e64-60d2-4409-b05e-ae3b94e81df7",
          "attributes": {}
        }
      ],
      "hn-install": [],
      "ohpatient-light": [],
      "ohpatient-otp": [],
      "security-admin-console": [],
      "hnrole": [],
      "admin-cli": [],
      "account-console": [],
      "ohsso": [],
      "broker": [
        {
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "21e9334c-a9cc-435c-abc2-9074e5c97c9b",
          "attributes": {}
        }
      ],
      "account": [
        {
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        },
        {
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "b60a5813-66af-4fed-b48c-ad1f68188210",
          "attributes": {}
        }
      ],
      "oh-monitoring": []
    }
  },
  "groups": [],
  "defaultRole": {
    "name": "default-roles-openshift-dev",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "oh-base"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "username": "service-account-ohsso",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "ohsso",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "HNCIT_CIT_RESCHEDULE",
        "HDR_BASE_R",
        "HNCIT_CIT_NEW",
        "HNCON_GEST_PARAM",
        "OHALE_WR",
        "HNPOR_CLINICAL_FORMS_WIDGET",
        "HNPOR_APPO_WIDGET",
        "HNCON_WORKLIST_WRITE",
        "HNPOB_POB_WRITE",
        "HNPOB_POB_READ",
        "HNAUT_USR_READ_SYS",
        "HNAUT_OFER_DEMA_PREST",
        "HNGEP_CIT_CANCEL",
        "HDR_FOUNDATION_R",
        "HNGEP_WRITE_OWN_REQ_LAB",
        "HNAUT_ADM_READ",
        "HNGEP_RESULTS_REQ_LAB",
        "HNAUT_WORKPLACE_READ",
        "HNAUT_ADM_WRITE",
        "HNAUT_CONF_ROLE_PRF_WRITE",
        "HNGEP_EXE_IMA",
        "HNAUT_USR_WRITE_SYS",
        "HNAUT_PHYS_STRUCT_WRITE_SYS",
        "IMPRIMIR_INF",
        "OHALE_RD",
        "HNAUT_PRF_WRITE",
        "HNGEP_WRITE_REQ_IMA_ADVANCED",
        "HNGEP_CIT_NEW",
        "HNCIT_ACTION_END_APPO",
        "HNGEP_RESULTS_REQ_IMA",
        "HDR_FOUNDATION_W",
        "HNAUT_USR_WRITE_CENTER",
        "HNCAT_CAT_WRITE",
        "HNGEP_WRITE_OWN_REQ_IMA",
        "HNCON_CLI",
        "HNPOR_APPO_NEW_PROF",
        "HNCON_DOMAIN_WRITE",
        "HNCIT_CIT_CANCEL",
        "HNCIT_APPOINT_CALL",
        "HNGEP_PACS_ACCESS",
        "HNCON_PARAM_WRITE",
        "HNAUT_FUN_LABEL",
        "HNPOR_REQ_WIDGET",
        "HNAUT_FUN_STRUCT_READ_SYS",
        "HNGEP_SEE_MIN_DETAIL",
        "HNAUT_CONF_ROLE_PRF_READ",
        "HNGEP_READ_REQ",
        "HDR_BASE_W",
        "HNAUT_HIST_CONNECTION_SYS",
        "HNCIT_ACTION_ADMISSION",
        "HNGEP_WRITE_REQ_LAB",
        "HNAUT_FUN_ACTIVE_PASSIVE",
        "HNGEP_AUTORIZ_REQ",
        "HNGEP_WRITE_REQ_IMA",
        "HNCON_WORKLIST_IMPEXP",
        "HNAUT_FUN_READ",
        "HNGEP_FIN_REQ",
        "HNAUT_WORKPLACE_WRITE",
        "HNGEP_EXT_SAM",
        "HNAUT_CALENDAR_MNG_WRITE",
        "HNCIT_CIT_PATI_APPO",
        "HNPOB_POB_READ_CONFIDENTIAL",
        "HNAUT_PRF_READ",
        "HNCIT_CIT_EDITION_APPO",
        "HNAUT_USR_WRITE_ORG",
        "default-roles-openshift-dev",
        "HNAUT_PHYS_STRUCT_READ_SYS",
        "HNDOC_ATTACH_READ",
        "HNCLI_FOLLOW_FORMS_READ",
        "HNPOR_APPO_NEW_SCHE",
        "HNAUT_FUN_STRUCT_WRITE_SYS",
        "HNCON_DOMAIN_READ"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/openshift-dev/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/openshift-dev/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/openshift-dev/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/openshift-dev/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "hn-install",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "appauth://endsession",
        "https://oh-modules-monitoring.apps.lab.openshift.com*",
        "appauth://callback",
        "https://oh-modules.apps.lab.openshift.com*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "mv",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "mv",
            "endpoint.name": "mv",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "cns",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "cns",
            "endpoint.name": "cns",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "birthdate",
            "endpoint.name": "birthdate",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "scope",
            "endpoint.name": "scope",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "proffessional",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "proffessional",
            "endpoint.name": "proffessional",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "unit_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit_name",
            "endpoint.name": "unit_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "unit_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "sourceUnit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceUnit",
            "endpoint.name": "sourceUnit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "name",
            "endpoint.name": "name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "compact",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "compact",
            "endpoint.name": "compact",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "sourceCenter",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceCenter",
            "endpoint.name": "sourceCenter",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "smart",
            "endpoint.name": "smart",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center_abbr",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_abbr",
            "endpoint.name": "center_abbr",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "center_abbr",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart_style_url",
          "protocol": "openid-connect",
          "protocolMapper": "hardcoded-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "hardcoded.name": "https://ehr/styles/smart_v1.json",
            "endpoint.name": "smart_style_url",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hn organization",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnorganization",
            "endpoint.name": "hnorganization",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnorganization",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center",
            "endpoint.name": "center",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hnrole.code",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.value": "SUPERADMIN",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "hnrole.code",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "practitioner_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "hnautPrId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "practitioner_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_name",
            "endpoint.name": "center_name",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "center_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "user roles",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "roles",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "claim.name": "roles",
            "jsonType.label": "json"
          }
        },
        {
          "name": "nome_da_mae",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "nome_da_mae",
            "endpoint.name": "nome_da_mae",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patient",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "patient",
            "endpoint.name": "patient",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "resource",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "resource",
            "endpoint.name": "resource",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "resource",
            "jsonType.label": "String"
          }
        },
        {
          "name": "unit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit",
            "endpoint.name": "unit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "additionalParams",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "additionalParams",
            "endpoint.name": "additionalParams",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "careline_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "careline_name",
            "endpoint.name": "careline_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "careline_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hnrole.display",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.value": "Administrador de Sistema",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "hnrole.display",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "hy",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hy",
            "endpoint.name": "hy",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "last-login",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "last-login",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "last-login",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "name": "hnrole.scope",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.value": "1",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "hnrole.scope",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "cpf",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "cpf",
            "endpoint.name": "cpf",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "patient/*.read",
        "offline_access",
        "launch",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "hnrole",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "appauth://endsession",
        "appauth://callback",
        "https://oh-modules.apps.lab.openshift.com*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "hn organization",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnorganization",
            "endpoint.name": "hnorganization",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnorganization",
            "jsonType.label": "String"
          }
        },
        {
          "name": "last-login",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "last-login",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "last-login",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "user roles",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "roles",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "roles",
            "jsonType.label": "json"
          }
        },
        {
          "name": "unit_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit_name",
            "endpoint.name": "unit_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "unit_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "nome_da_mae",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "nome_da_mae",
            "endpoint.name": "nome_da_mae",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "unit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit",
            "endpoint.name": "unit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "cns",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "cns",
            "endpoint.name": "cns",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "sourceCenter",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceCenter",
            "endpoint.name": "sourceCenter",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "additionalParams",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "additionalParams",
            "endpoint.name": "additionalParams",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hnrole",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnrole",
            "endpoint.name": "hnrole",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnrole",
            "jsonType.label": "String"
          }
        },
        {
          "name": "proffessional",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "proffessional",
            "endpoint.name": "proffessional",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "center_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_name",
            "endpoint.name": "center_name",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "center_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "smart",
            "endpoint.name": "smart",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "cpf",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "cpf",
            "endpoint.name": "cpf",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center",
            "endpoint.name": "center",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "practitioner_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "hnautPrId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "practitioner_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "sourceUnit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceUnit",
            "endpoint.name": "sourceUnit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "scope",
            "endpoint.name": "scope",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center_abbr",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_abbr",
            "endpoint.name": "center_abbr",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "center_abbr",
            "jsonType.label": "String"
          }
        },
        {
          "name": "name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "name",
            "endpoint.name": "name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart_style_url",
          "protocol": "openid-connect",
          "protocolMapper": "hardcoded-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "hardcoded.name": "https://ehr/styles/smart_v1.json",
            "endpoint.name": "smart_style_url",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "resource",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "resource",
            "endpoint.name": "resource",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "resource",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hy",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hy",
            "endpoint.name": "hy",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patient",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "patient",
            "endpoint.name": "patient",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "careline_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "careline_name",
            "endpoint.name": "careline_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "careline_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "mv",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "mv",
            "endpoint.name": "mv",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "compact",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "compact",
            "endpoint.name": "compact",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "birthdate",
            "endpoint.name": "birthdate",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "patient/*.read",
        "offline_access",
        "launch",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "oh-monitoring",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:3000*",
        "https://oh-modules.apps.lab.openshift.com*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1742886601",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "sourceUnit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceUnit",
            "endpoint.name": "sourceUnit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "smart",
            "endpoint.name": "smart",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_name",
            "endpoint.name": "center_name",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "center_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "compact",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "compact",
            "endpoint.name": "compact",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "name",
            "endpoint.name": "name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "birthdate",
            "endpoint.name": "birthdate",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "unit_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit_name",
            "endpoint.name": "unit_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "unit_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "unit",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "unit",
            "endpoint.name": "unit",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "resource",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "resource",
            "endpoint.name": "resource",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "resource",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "center_abbr",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center_abbr",
            "endpoint.name": "center_abbr",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "center_abbr",
            "jsonType.label": "String"
          }
        },
        {
          "name": "center",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "center",
            "endpoint.name": "center",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "json"
          }
        },
        {
          "name": "hnrole",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnrole",
            "endpoint.name": "hnrole",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnrole",
            "jsonType.label": "String"
          }
        },
        {
          "name": "careline_name",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "careline_name",
            "endpoint.name": "careline_name",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "careline_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "smart_style_url",
          "protocol": "openid-connect",
          "protocolMapper": "hardcoded-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "hardcoded.name": "https://ehr/styles/smart_v1.json",
            "endpoint.name": "smart_style_url",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "proffessional",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "proffessional",
            "endpoint.name": "proffessional",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "groups_prometheus",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "scope",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "endpoint.format": "s",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "name": "sourceCenter",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "sourceCenter",
            "endpoint.name": "sourceCenter",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "jsonType.label": "String"
          }
        },
        {
          "name": "user roles",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "roles",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "roles",
            "jsonType.label": "json"
          }
        },
        {
          "name": "hn organization",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnorganization",
            "endpoint.name": "hnorganization",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnorganization",
            "jsonType.label": "String"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "scope",
            "endpoint.name": "scope",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "practitioner_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "hnautPrId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "practitioner_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "last-login",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "last-login",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "last-login",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "openid",
        "profile",
        "roles",
        "groups",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "patient/*.read",
        "offline_access",
        "launch",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "ohpatient-light",
      "name": "ohpatient-light",
      "description": "ohpatient-light",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "appauth://endsession",
        "appauth://callback",
        "https://oh-modules.apps.lab.openshift.com*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "login_theme": "patient-light",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "mobile_number",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.name": "mobile_number",
            "userinfo.token.claim": "false",
            "user.attribute": "mobile_number",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "mobile_number",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hn role",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnrole",
            "endpoint.name": "hnrole",
            "userinfo.token.claim": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "hnrole",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "scope",
            "endpoint.name": "scope",
            "multivalued": "false",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientDocument",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.name": "patientDocument",
            "userinfo.token.claim": "false",
            "user.attribute": "patientDocument",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientDocument",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientGender",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "patientGender",
            "endpoint.name": "patientGender",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientGender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "user roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "hnrole",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "endpoint.format": "s",
            "claim.name": "roles",
            "jsonType.label": "json"
          }
        },
        {
          "name": "patient_id",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "false",
            "cookie.name": "patient_id",
            "endpoint.name": "patient_id",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patient_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientBirthdate",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "patientBirthdate",
            "endpoint.name": "patientBirthdate",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientBirthdate",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "ohpatient-otp",
      "name": "ohpatient-otp",
      "description": "ohpatient-otp",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "appauth://endsession",
        "appauth://callback",
        "https://oh-modules.apps.lab.openshift.com*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "login_theme": "patient-otp",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patient_id",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "false",
            "cookie.name": "patient_id",
            "endpoint.name": "patient_id",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patient_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientGender",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "patientGender",
            "endpoint.name": "patientGender",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientGender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "mobile_number",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.name": "mobile_number",
            "userinfo.token.claim": "false",
            "user.attribute": "mobile_number",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "mobile_number",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientDocument",
          "protocol": "openid-connect",
          "protocolMapper": "userproperty-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.name": "patientDocument",
            "userinfo.token.claim": "false",
            "user.attribute": "patientDocument",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientDocument",
            "jsonType.label": "String"
          }
        },
        {
          "name": "patientBirthdate",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "cookie.name": "patientBirthdate",
            "endpoint.name": "patientBirthdate",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "patientBirthdate",
            "jsonType.label": "String"
          }
        },
        {
          "name": "hn role",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "hnrole",
            "endpoint.name": "hnrole",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "hnrole",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "cookie-endpoint-mapper",
          "consentRequired": false,
          "config": {
            "endpoint.add": "true",
            "cookie.name": "scope",
            "endpoint.name": "scope",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "endpoint.format": "s",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "ohsso",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "6r5GMS3zEfhuTwvW2gGHCMGYlm7Vk1Uo",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "frontchannel.logout.session.required": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "saml.allow.ecp.flow": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "client.secret.creation.time": "1729170441",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/openshift-dev/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/openshift-dev/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "name": "launch",
      "description": "launch",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      }
    },
    {
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "groups",
      "description": "groups",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "name": "patient/*.read",
      "description": "patient/*.read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      }
    },
    {
      "name": "openid",
      "description": "openid",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "email",
    "roles",
    "role_list",
    "acr",
    "web-origins",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "address",
    "offline_access",
    "phone"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "onesait",
  "accountTheme": "keycloak",
  "adminTheme": "base",
  "emailTheme": "base",
  "eventsEnabled": true,
  "eventsExpiration": 7200,
  "eventsListeners": [
    "hnatnalog",
    "metrics-listener",
    "jboss-logging",
    "oh-save-last-login"
  ],
  "enabledEventTypes": [
    "LOGOUT",
    "LOGIN_ERROR",
    "LOGOUT_ERROR",
    "LOGIN"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "name": "hn-provider",
        "providerId": "hn-provider",
        "subComponents": {},
        "config": {
          "included.clients": [
            "oh-monitoring",
            "hnrole"
          ],
          "cachePolicy": [
            "NO_CACHE"
          ],
          "priority": [
            "0"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "name": "mymed-storage-external-token",
        "providerId": "mymed-storage-external-token",
        "subComponents": {},
        "config": {
          "included.clients": [
            "hnrole"
          ],
          "cachePolicy": [
            "NO_CACHE"
          ],
          "priority": [
            "1"
          ],
          "enabled": [
            "true"
          ]
        }
      },
      {
        "name": "oh-patient",
        "providerId": "oh-patient",
        "subComponents": {},
        "config": {
          "patient.read.service.url": [
            "https://oh-modules.apps.lab.openshift.com/ispob/fhir/"
          ],
          "telecom.use.email": [
            "email"
          ],
          "included.clients": [
            "ohpatient-light",
            "ohpatient-otp"
          ],
          "telecom.system.phonenumber": [
            "phone"
          ],
          "patient.search.service.url": [
            "https://oh-modules.apps.lab.openshift.com/ispob/fhir/"
          ],
          "telecom.use.phonenumber": [
            "mobile"
          ],
          "cachePolicy": [
            "NO_CACHE"
          ],
          "priority": [
            "3"
          ],
          "enabled": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "pt-BR",
    "en",
    "es"
  ],
  "defaultLocale": "es",
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "External-token",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "OH External Token",
          "authenticator": "OH External Token",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "External IDP To OHAUT Integrator",
          "authenticator": "external-idp-ohaut-integrator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": true,
          "flowAlias": "Role-selection",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Hn Forms",
      "description": "Hn Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "hn select role org",
          "authenticator": "role-org-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Patient Light Form",
      "description": "Patient Light Form",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "OHPatient Light Form",
          "authenticator": "ohpatient-light-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Patient Otp Form",
      "description": "Patient Otp Form",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "OHPatient OTP Form",
          "authenticator": "ohpatient-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "patient-browser-otp-authentication",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Role-selection",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "Auto Select",
          "authenticator": "auto-role-org-authenticator",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "Select RoleOrg Ext token",
          "authenticator": "role-org-authenticator",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "hn",
      "description": "hn",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "OH Get Req Params",
          "authenticator": "oh-get-req-params-authenticator",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "ohhdaale",
          "authenticator": "oh-get-req-params-authenticator",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "hn-auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "DISABLED",
          "priority": 4,
          "autheticatorFlow": true,
          "flowAlias": "External-token",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 5,
          "autheticatorFlow": true,
          "flowAlias": "Hn Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "hn_install",
      "description": "hn_install",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "hn_install Hn Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "hn_install Hn Forms",
      "description": "Hn Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "ohpatient_jwt",
      "description": "ohpatient_jwt",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "ohpatient jwt",
          "authenticator": "ohpatient-auth-external-token",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "ohpatient_light",
      "description": "ohpatient_light",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "Patient Light Form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "ohpatient_otp",
      "description": "ohpatient_otp",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "hn-auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "Patient Otp Form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "Auto Select",
      "config": {}
    },
    {
      "alias": "External IDP To OHAUT Integrator",
      "config": {
        "ext-idp-ohaut-session-note-doc-number": "EXT_USER_DOCUMENT"
      }
    },
    {
      "alias": "OH External Token",
      "config": {
        "ext.jwt.session.note.doc": "EXT_USER_DOCUMENT",
        "ext.jwt.kid.keys": "[]",
        "ext.jwt.kid.certificates": "[]"
      }
    },
    {
      "alias": "OH Get Req Params",
      "config": {
        "requestParams": "sourceCenter##sourceUnit##patient##smart##compact##additionalParams##proffessional##mv##hy##cpf##cns##birthdate##name##nome_da_mae",
        "requestContexts": "desktop-hd",
        "requestClear": "false"
      }
    },
    {
      "alias": "OHPatient Light Form",
      "config": {
        "lightAllowedIdenfifiers": "2.16.724.4.40.222"
      }
    },
    {
      "alias": "OHPatient OTP Form",
      "config": {
        "otpAllowedIdentifiers": "112.111.124.223##112.111.124.222"
      }
    },
    {
      "alias": "Select RoleOrg Ext token",
      "config": {}
    },
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "alias": "hn select role org",
      "config": {}
    },
    {
      "alias": "ohhdaale",
      "config": {
        "requestParams": "showDefaultHeaderAction",
        "requestContexts": "ohhdaale",
        "requestClear": "false"
      }
    },
    {
      "alias": "ohpatient jwt",
      "config": {
        "jwt.expiration.tolerance": "10",
        "jwt.role.code": "PACIENTE_EXTERNO",
        "jwt.enable.data.verification": "true"
      }
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "hn",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "18.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
