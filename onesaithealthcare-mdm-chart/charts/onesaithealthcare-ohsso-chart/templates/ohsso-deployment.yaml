apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'ohsso'
  labels:
    app: 'ohsso'
spec:
  replicas: {{ if eq .Values.global.environment.type "dev" }}1{{ else if eq .Values.global.environment.type "prod" }}2{{ end}}
  selector:
    matchLabels:
      app: 'ohsso'
  template:
    metadata:
      labels:
        app: 'ohsso'
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      restartPolicy: Always
      serviceAccountName: oh-module
      imagePullSecrets:
        - name: 'oh-docker-creds'
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - ohsso
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      containers:
        - resources:
            limits:
              cpu: 400m
              memory: 1500Mi
            requests:
              cpu: 100m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /auth/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 12
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          name: 'ohsso'
          livenessProbe:
            httpGet:
              path: /auth/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          env:
            - name: KEYCLOAK_ADMIN
              value: 'admin'
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: '{{ .Values.ohsso.db.adminpassword}}'
            - name: KEYCLOAK_EXECUTE_BUILD
              value: 'false'
            - name: JGROUPS_DNS_QUERY
              value: 'ohsso-jgroups-ping'
            - name: KEYCLOAK_STATISTICS
              value: 'true'
            - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
              value: 'true'
            - name: PROXY_ADDRESS_FORWARDING
              value: 'true'
            - name: KEYCLOAK_FRONTEND_URL
              value: '{{ .Values.global.domain.protocol }}://{{ .Values.global.domain.host }}/auth'
            - name: QUARKUS_HTTP_LIMITS_MAX_INITIAL_LINE_LENGTH
              value: '32768'
          securityContext:
            privileged: false
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 4444
              protocol: TCP
            - containerPort: 8888
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: ohsso-configmap-global
              mountPath: /opt/keycloak/conf/keycloak.conf
              subPath: keycloak.conf
            - name: ohsso-configmap-realm
              mountPath: '/opt/keycloak/ishome/oh-base/integration.properties'
              subPath: integration.properties
            - name: ohsso-configmap-realm
              mountPath: '/opt/keycloak/ishome/oh-base/password.properties'
              subPath: password.properties
            - name: cert-domain
              mountPath: /cert/cert-domain.crt
              subPath: tls.crt
          terminationMessagePolicy: File
          image: >-
            {{ .Values.global.docker.registry.host }}/{{ .Values.global.docker.registry.project }}/ohsso-x:{{ .Chart.AppVersion }}
      serviceAccount: oh-module
      volumes:
        - name: ohsso-configmap-global
          configMap:
            name: 'ohsso-configmap-global'
            items:
              - key: keycloak.conf
                path: keycloak.conf
            defaultMode: 420
        - name: ohsso-configmap-realm
          configMap:
            name: 'ohsso-configmap-realm-oh-base'
            items:
              - key: integration.properties
                path: integration.properties
              - key: password.properties
                path: password.properties
            defaultMode: 420
        - name: cert-domain
          secret:
            secretName: cert-domain
            items:
              - key: tls.crt
                path: tls.crt
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600