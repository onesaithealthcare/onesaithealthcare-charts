kind: Deployment
apiVersion: apps/v1
metadata:
  name: ohcore-webcomponents-integration-front
  labels:
    app: ohcore-webcomponents-integration-front
spec:
  replicas: {{ if eq .Values.global.environment.type "dev" }}1{{ else if eq .Values.global.environment.type "prod" }}2{{ end}}
  selector:
    matchLabels:
      app: ohcore-webcomponents-integration-front
  template:
    metadata:
      labels:
        app: ohcore-webcomponents-integration-front
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      restartPolicy: Always
      serviceAccountName: oh-module
      imagePullSecrets:
        - name: 'oh-docker-creds'
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - ohcore-webcomponents-integration-front
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 16Mi
          readinessProbe:
            httpGet:
              path: /ohcore-webcomponents-integration/index.html
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: ohcore-webcomponents-integration-front
          livenessProbe:
            httpGet:
              path: /ohcore-webcomponents-integration/index.html
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: ohcore-webcomponents-integration-front-cfg
              readOnly: true
              mountPath: >-
                /usr/share/nginx/html/ohcore-webcomponents-integration/assets/config
            - name: hnhome-ohsso-front
              readOnly: true
              mountPath: /usr/share/nginx/html/ohcore-webcomponents-integration/keycloak.json
              subPath: keycloak.json
            - name: nginx-front-cfg
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          terminationMessagePolicy: File
          image: '{{ .Values.global.docker.registry.host }}/{{ .Values.global.docker.registry.project }}/ohcore-webcomponents-integration@{{ .Values.ohaut.sha256_front_wcint }}'
      serviceAccount: oh-module
      volumes:
        - name: ohcore-webcomponents-integration-front-cfg
          configMap:
            name: ohcore-webcomponents-integration-front-cfg
            defaultMode: 420
        - name: hnhome-ohsso-front
          configMap:
            name: hnhome-ohsso-front
            defaultMode: 420
        - name: nginx-front-cfg
          configMap:
            name: nginx-front-cfg
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
