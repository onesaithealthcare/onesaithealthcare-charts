apiVersion: v1
kind: ConfigMap
metadata:
  name: ohatn-back-cfg
data:
  ArrConnections.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration>
       <StandardConnection name="arr-tcp">
          <HostName>0.0.0.0</HostName>
          <Port>2862</Port>
      </StandardConnection>
      <!-- use IP address instead of localhost for UDP -->
      <StandardConnection name="arr-udp">
          <HostName>0.0.0.0</HostName>
          <Port>2861</Port>
      </StandardConnection>
    </Configuration>
  hnatna.properties: |
    datasource.hnatna=jdbc/hnatna
{{- if eq .Values.global.database.type "mysql" }}
    hib.dialect=org.hibernate.dialect.MySQLDialect
{{- else }}
    hib.dialect=org.hibernate.dialect.Oracle10gDialect
{{- end }}
    database.selected={{ .Values.global.database.type }}
    hib.hbm2ddl.auto=none
    persist.database=true
    persist.elasticsearch=false
    url.elasticsearch=http://xxx.yyy.zzz/elasticsearch
    elasticsearch.indexname=atna-data
    elasticsearch.indextype=atna-data
    # propiedades para instanciar cliente para enviar eventos de AuditLogUsed
    atna.appName=EHR_INDRA_ONESITE
    atna.facility=AUDIT
    atna.format=RFC5424
    atna.messageHost=oh-modules.xyz
    atna.port=2862
    atna.protocol=TCP
    atna.severity=INFORMATIONAL
    atna.ssl=false
    atna.syslogHost=oh-modules.xyz
    liquibase.enable=true
    liquibase.context.partition.enable={{ .Values.global.database.oracle_partitioning }}
  logback-config.xml: >
    <included>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
      <layout class="ch.qos.logback.classic.PatternLayout">
          <pattern>|%-5level|%d{dd/MM/yy HH:mm:ss.SSS}|%msg|%logger{36}%n</pattern>
      </layout>
    </appender>
    <logger name="es.indra.hn" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="es.indra.indrasalud" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="com.minsait.onesait" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <!-- Spring -->
    <logger name="org.springframework" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="org.springframework.jdbc" level="WARN" />
    <logger name="org.springframework.transaction" level="WARN" />
    <logger name="org.springframework.orm" level="WARN" />
    <logger name="org.springframework.core.web" level="WARN" />
    <!-- Hibernate -->
    <logger name="org.hibernate" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="org.hibernate.SQL" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="org.hibernate.engine.spi.QueryParameters" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="{{ if eq .Values.global.environment.type "dev" }}INFO{{ else if eq .Values.global.environment.type "prod" }}ERROR{{ end}}" />
    <logger name="org.apache" level="WARN" />
    <logger name="net.*" level="WARN" />
    <logger name="loggerPersistFile" level="WARN" additive="false" />
    <root level="INFO">
      <appender-ref ref="STDOUT"/>
    </root>
    </included>
