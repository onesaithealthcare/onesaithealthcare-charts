{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "environment": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["dev", "prod"],
          "description": "Choose dev or prod"
        }
      },
      "required": ["type"]
    },
    "domain": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "enum": ["http", "https"],
          "description": "Choose http or https"
        },
        "host": {
          "type": "string",
          "description": "Enter environment domain (for example: oh-modules.apps.lab.openshift.com)."
        },
        "istio": {
          "type": "boolean",
          "description": "Environment is using istio."
        }
      },
      "required": ["protocol", "host", "istio"]
    },
    "docker": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Enter docker registry host (for example: docker-registry.organization.com)."
            },
            "project": {
              "type": "string",
              "description": "Enter docker registry project (for example: onesait-healthcare)."
            }
          },
          "required": ["host", "project"]
        }
      }
    },
    "cmc": {
      "type": "object",
      "properties": {
        "database": {
          "type": "object",
          "properties": {
            "mongodb": {
              "type": "object",
              "properties": {
                "connection_string": {
                  "type": "string",
                  "description": "Enter CMC MongoDB connection string (for example: mongodb://<user>:<pass>@mongodb:27017,mongodb2:27017,mongodb3:27017/?replicaSet=mongodbReplicaSet&readPreference=primary )."
                },
                "dbname": {
                  "type": "string",
                  "description": "Enter CMC MongoDB database name."
                }
              },
              "required": ["connection_string", "dbname"]
            },
            "postgresql": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "description": "Enter CMC PostgreSQL Host."
                },
                "port": {
                  "type": "string",
                  "description": "Enter CMC PostgreSQL port."
                },
                "user": {
                  "type": "string",
                  "description": "Enter CMC PostgreSQL user (for example: us_rule_engine )."
                },
                "pass": {
                  "type": "string",
                  "description": "Enter CMC PostgreSQL pass."
                }
              },
              "required": ["connection_string", "user", "pass"]
            }
          }
        },
        "kafka": {
          "type": "object",
          "properties": {
            "bootstrap_server_url": {
              "type": "string",
              "description": "Enter CMC Kafka bootstrap server URL (for example: kafka-bootstrap:9092 )."
            },
            "user": {
              "type": "string",
              "description": "Enter CMC Kafka username."
            },
            "pass": {
              "type": "string",
              "description": "Enter CMC Kafka password."
            },
            "sasl_mechanism": {
              "type": "string",
              "description": "Enter CMC Kafka SASL mechanism (for example SCRAM-SHA-512)."
            },
            "security_protocol": {
              "type": "string",
              "description": "Enter CMC Kafka security protocol (for example SASL_PLAINTEXT)."
            }
          },
          "required": ["bootstrap_server_url", "user", "pass", "sasl_mechanism", "security_protocol"]
        }
      }
    }
  },
  "required": ["environment", "domain", "docker", "cmc"]
}