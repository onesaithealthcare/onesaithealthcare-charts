apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alert-module
  name: alert-module
  namespace: oh-modules
spec:
  progressDeadlineSeconds: 600
  replicas: '{{ if eq .Values.environment.type "dev" }}1{{ else if eq .Values.environment.type "prod" }}2{{ end}}'
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alert-module
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: alert-module
    spec:
      containers:
        - env:
            - name: MONGODB_CONNECTION_STRING
              value: {{ .Values.cmc.database.string }}
            - name: MONGODB_DATABASE
              value: cmc
          image: {{ .Values.docker.registry.host }}/{{ .Values.docker.registry.project }}/alert-module:{{ .Values.Chart.appVersion }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /alert-module/q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: alert-module-container
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /alert-module/q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: oh-docker-creds
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
