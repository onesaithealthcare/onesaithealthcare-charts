kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: rule-engine
  namespace: oh-modules
spec:
  replicas: '{{ if eq .Values.environment.type "dev" }}1{{ else if eq .Values.environment.type "prod" }}2{{ end}}'
  selector:
    matchLabels:
      app: rule-engine
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rule-engine
    spec:
      restartPolicy: Always
      imagePullSecrets:
        - name: oh-docker-creds
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1500Mi
          readinessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: server
          livenessProbe:
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 360
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: TB_SERVICE_ID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: TB_SERVICE_TYPE
              value: monolith
            - name: ZOOKEEPER_ENABLED
              value: 'false'
            - name: ZOOKEEPER_URL
              value: 'zookeeper:2181'
            - name: JS_EVALUATOR
              value: local
            - name: HTTP_LOG_CONTROLLER_ERROR_STACK_TRACE
              value: 'false'
            - name: OHSSO_ISSUER
              value: {{ .Values.domain.protocol }}://{{ .Values.domain.host }}/auth/realms/oh-base
            - name: OHSSO_WELL_KNOWN_URL
              value: {{ .Values.domain.protocol }}://{{ .Values.domain.host }}/auth/realms/oh-base/.well-known/openid-configuration
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: rpc
              containerPort: 9090
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: rule-engine-config
              mountPath: /rule_engine/conf/logback.xml
              subPath: logback.xml
            - name: rule-engine-config
              mountPath: /rule_engine/conf/thingsboard.conf
              subPath: thingsboard.conf
            - name: rule-engine-logs
              mountPath: /var/log/rule_engine
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: rule-engine-db-config
            - configMapRef:
                name: rule-engine-mongodb-config
            - configMapRef:
                name: rule-engine-cache-config
            - configMapRef:
                name: rule-engine-kafka-config
            - configMapRef:
                name: rule-engine-kafka-input-config
          image: >-
            {{ .Values.docker.registry.host }}/{{ .Values.docker.registry.project }}/rule_engine:{{ .Chart.appVersion }}
      volumes:
        - name: rule-engine-config
          configMap:
            name: rule-engine-config
            items:
              - key: conf
                path: thingsboard.conf
              - key: logback
                path: logback.xml
            defaultMode: 420
        - name: rule-engine-logs
          emptyDir: {}
      dnsPolicy: ClusterFirst
  serviceName: rule-engine
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10

