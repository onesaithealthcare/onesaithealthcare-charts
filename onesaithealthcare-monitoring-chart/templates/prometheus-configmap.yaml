apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    prometheus: oh-prometheus
  name: oh-prometheus-config
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  allow-snippet-annotations: 'false'
  recording_rules.yml: |
    {}
  rules: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
      metrics_path: /prometheus/metrics  
    - job_name: kafka-monitor
      honor_labels: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - {{ .Values.prometheus.kafka_namespace }}
      scrape_interval: 30s
      metrics_path: /metrics
      scheme: http
      relabel_configs:
      - source_labels:
        - job
        regex: (.*)
        target_label: __tmp_prometheus_job_name
      - action: keep
        source_labels:
        - __meta_kubernetes_service_labelpresent_strimzi_io_cluster
        regex: "true"
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: tcp-prometheus
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Node;(.*)
        replacement: ${1}
        target_label: node
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels:
        - __meta_kubernetes_namespace
        regex: (.*)
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: service
      - source_labels:
        - __meta_kubernetes_pod_name
        regex: (.*)
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        regex: (.*)
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: job
        replacement: ${1}
      - target_label: endpoint
        regex: (.*)
        replacement: tcp-prometheus
      - source_labels:
        - __address__
        regex: (.*)
        target_label: __tmp_hash
        modulus: 1
        action: hashmod
      - source_labels:
        - __tmp_hash
        regex: "0"
        action: keep
      metric_relabel_configs: []
    
    - job_name: ohmodules-monitor
      honor_labels: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - {{ .Values.namespace_oh_modules }}
      scrape_interval: 30s
      metrics_path: /metrics
      scheme: http
      relabel_configs:
      - source_labels:
        - job
        regex: (.*)
        target_label: __tmp_prometheus_job_name
      - action: keep
        source_labels:
        - __meta_kubernetes_service_labelpresent_app
        regex: "true"
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: prom
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Node;(.*)
        replacement: ${1}
        target_label: node
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels:
        - __meta_kubernetes_namespace
        regex: (.*)
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: service
      - source_labels:
        - __meta_kubernetes_pod_name
        regex: (.*)
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        regex: (.*)
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: job
        replacement: ${1}
      - target_label: endpoint
        regex: (.*)
        replacement: prom
      - source_labels:
        - __address__
        regex: (.*)
        target_label: __tmp_hash
        modulus: 1
        action: hashmod
      - source_labels:
        - __tmp_hash
        regex: "0"
        action: keep
      metric_relabel_configs:
      - source_labels:
        - job
        target_label: environment
        regex: .*
        replacement: ohmodules
        action: replace
      - source_labels:
        - job
        target_label: machine
        regex: (.*)
        replacement: $1
        action: replace
        
    - job_name: ohsso-monitor
      honor_labels: true
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - {{ .Values.namespace_oh_modules }}
      scrape_interval: 30s
      metrics_path: /auth/realms/oh-base/metrics
      scheme: http
      relabel_configs:
      - source_labels:
        - job
        regex: (.*)
        target_label: __tmp_prometheus_job_name
      - action: keep
        source_labels:
        - __meta_kubernetes_service_label_app
        - __meta_kubernetes_service_labelpresent_app
        regex: (ohsso);true
      - action: keep
        source_labels:
        - __meta_kubernetes_endpoint_port_name
        regex: http
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Node;(.*)
        replacement: ${1}
        target_label: node
      - source_labels:
        - __meta_kubernetes_endpoint_address_target_kind
        - __meta_kubernetes_endpoint_address_target_name
        separator: ;
        regex: Pod;(.*)
        replacement: ${1}
        target_label: pod
      - source_labels:
        - __meta_kubernetes_namespace
        regex: (.*)
        target_label: namespace
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: service
      - source_labels:
        - __meta_kubernetes_pod_name
        regex: (.*)
        target_label: pod
      - source_labels:
        - __meta_kubernetes_pod_container_name
        regex: (.*)
        target_label: container
      - source_labels:
        - __meta_kubernetes_service_name
        regex: (.*)
        target_label: job
        replacement: ${1}
      - target_label: endpoint
        regex: (.*)
        replacement: http
      - source_labels:
        - __address__
        regex: (.*)
        target_label: __tmp_hash
        modulus: 1
        action: hashmod
      - source_labels:
        - __tmp_hash
        regex: "0"
        action: keep
      metric_relabel_configs:
      - source_labels:
        - endpoint
        target_label: ohsso_server
        regex: .*
        replacement: ohsso-{{ .Values.namespace_oh_modules }}
        action: replace
      - source_labels:
        - job
        target_label: job
        regex: .*
        replacement: ohsso_exporter
        action: replace
      - source_labels:
        - job
        target_label: realm
        regex: .*
        replacement: oh-base
        action: replace